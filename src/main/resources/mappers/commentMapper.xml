<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.board.dao.CommentDao">
	
<!-- 댓글 생성 -->
	<insert id = "commentCreate">
	insert into comments(comm_id, comm_content, comm_date, b_id, u_id) 
	values (comment_seq.nextval, #{comm_content}, sysdate, #{b_id}, #{u_id})
	</insert>


<!-- 대댓글 생성 -->
	<insert id = "reCommentCreate">
	insert into comments(comm_id, comm_content, comm_date, b_id, u_id, comm_del, parent_id) 
	values (comment_seq.nextval, #{comm_content}, #{comm_date}, #{b_id}, #{u_id}, #{comm_del}, #{parent_id})
	</insert>


<!-- 댓글 수정 -->
	<update id = "commentUpdate">
	update comments set comm_content=#{comm_content} where comm_id=#{comm_id} and comm_del='N'
	</update>


<!-- 댓글 삭제 -->
	<delete id = "commentDelete">
	update comments set comm_del='Y' where comm_id=#{comm_id} and comm_del='N'
	</delete>


<!-- 부모 댓글 정보 가져오기 -->
	<select id = "readParent" resultType = "CommentDto">
	select * from comments where comm_id=#{comm_id} and comm_del='N'
	</select>


<!-- 댓글 목록 조회 -->
    <select id="commentList" resultType="CommentDto">
    SELECT * FROM comments WHERE b_id = #{b_id} AND comm_del = 'N'
    ORDER BY CASE WHEN parent_id IS NULL THEN comm_id ELSE parent_id END, comm_date
    </select>
<!-- 부모댓글로 인한 계층적 정렬을 위해서  -->

<!-- 댓글 id로 댓글 조회 -->
	<select id="getCommentById" resultType="CommentDto">
	select * from comments where comm_id = #{comm_id}
	</select>




</mapper>
